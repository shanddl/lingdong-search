name: 构建 CRX 扩展包

on:
  push:
    branches:
      - main
    tags:
      - 'v*'  # 推送以v开头的tag时触发
    paths:
      - 'js/**'
      - 'manifest.json'
      - 'package.json'
  workflow_dispatch: # 允许手动触发

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
      - name: 检出代码
        uses: actions/checkout@v4
      
      - name: 设置 Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: 安装依赖
        run: npm ci
      
      - name: 读取版本号
        id: version
        run: |
          VERSION=$(node -p "require('./manifest.json').version")
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "扩展版本: $VERSION"
      
      - name: 构建 CRX（使用 ZIP 作为备用方案）
        run: |
          # 如果没有私钥，使用 zip 打包方式
          if [ ! -f "private-key.pem" ]; then
            echo "⚠️ 未找到私钥文件，使用 ZIP 打包方式"
            npm run package || node scripts/package-extension.js
          else
            echo "✅ 找到私钥文件，构建 CRX"
            npm run build || node scripts/build-crx.js
          fi
      
      - name: 上传构建产物
        uses: actions/upload-artifact@v4
        with:
          name: extension-package
          path: |
            *.crx
            *.zip
          retention-days: 30
      
      - name: 检查是否应该创建 Release
        id: check_release
        run: |
          # 如果推送了tag，或者手动触发，则创建Release
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            echo "should_create=true" >> $GITHUB_OUTPUT
            echo "触发方式: 手动触发"
          elif [[ "${{ github.ref }}" == refs/tags/* ]]; then
            echo "should_create=true" >> $GITHUB_OUTPUT
            echo "触发方式: Tag推送 - ${{ github.ref }}"
            # 从tag中提取版本号
            TAG_NAME=${GITHUB_REF#refs/tags/}
            echo "tag_name=$TAG_NAME" >> $GITHUB_OUTPUT
          else
            # 检查本次提交是否修改了manifest.json
            if git diff --name-only HEAD~1 HEAD | grep -q "manifest.json"; then
              echo "should_create=true" >> $GITHUB_OUTPUT
              echo "触发方式: manifest.json版本变更"
            else
              echo "should_create=false" >> $GITHUB_OUTPUT
              echo "跳过Release创建（仅代码更新，无版本变更）"
            fi
          fi
      
      - name: 创建或更新 Release
        if: steps.check_release.outputs.should_create == 'true'
        uses: softprops/action-gh-release@v1
        with:
          files: |
            *.crx
            *.zip
          tag_name: ${{ steps.check_release.outputs.tag_name || format('v{0}', steps.version.outputs.version) }}
          name: Release v${{ steps.version.outputs.version }}
          body: |
            ## 版本 v${{ steps.version.outputs.version }}
            
            ### 构建信息
            - **构建时间**: ${{ github.run_started_at }}
            - **提交**: ${{ github.sha }}
            - **提交消息**: ${{ github.event.head_commit.message || github.event.pusher.name }}
            
            ### 下载说明
            请下载对应的扩展包文件（.crx 或 .zip）并安装到 Chrome 浏览器中。
            
            **安装方法**：
            1. 下载 `.crx` 文件（如果生成成功）
            2. 或者下载 `.zip` 文件并解压
            3. 打开 Chrome，进入 `chrome://extensions/`
            4. 启用"开发者模式"
            5. 点击"加载已解压的扩展程序"，选择解压后的文件夹
          draft: false
          prerelease: false
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
